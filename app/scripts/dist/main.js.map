{"version":3,"sources":["ws-client.js","app.js","main.js"],"names":["socket","init","url","WebSocket","console","log","registerOpenHandler","handlerFunction","onopen","registerMessageHandler","onmessage","e","data","JSON","parse","sendMessage","payload","send","stringify","ChatApp","message","ChatMessage","serialize","m","user","u","timestamp","t","Date","getTime"],"mappings":";;AEAA;;;;AACA,AFDA,IECImB,AFDAnB,MAAJ,MECA;ADDA;ADEA,SAASC,IAAT,CAAcC,GAAd,EAAkB;AAChBF,EAAAA,MAAM,GAAG,IAAIG,SAAJ,CAAcD,GAAd,CAAT;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD;;AAED,SAASC,mBAAT,CAA6BC,eAA7B,EAA6C;AAC3CP,EAAAA,MAAM,CAACQ,MAAP,GAAgB,YAAM;AACpBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAE,IAAAA,eAAe;AAChB,GAHD,CCNIY,UACJ,mBAAa;AAAA,ADSd;;ACRGnB,ADUJ,SAASS,WCVER,IAAP,CAAY,MDUhB,CAAgCM,cCV5B,CDUJ,EAAgD;AAC9CP,EAAAA,MAAM,CAACU,SAAP,GAAmB,UAACC,CAAD,EAAO;ACVxBX,ADWAI,IAAAA,OAAO,CAACC,GAAR,CAAY,ICXLC,KDWP,EAAuBK,CAAC,CAACC,IAAzB,MCXA,CAA2B,YAAM;AAC/B,ADWF,QCXMQ,ADWFR,IAAI,GCXK,ADWFC,GCXK,CDWD,CAACC,ECXIO,GDWT,CAAWV,CAAC,CAACC,IAAb,CCXK,ADWhB,CCXgC;AAAEQ,ADYlCb,IAAAA,ECZkCa,OAAO,EAAE,IDY5B,CAACR,IAAD,CAAf;ACZgC,ADajC,GAJD,ECTkB,CAAd;ADcL;ACbKZ,sBAAOe,WAAP,CAAmBK,OAAO,CAACE,SAAR,EAAnB;AACD,ADcL,GCjBI,MDiBKP,WAAT,CAAqBC,OAArB,EAA6B;AAC3BhB,EAAAA,MAAM,CAACiB,IAAP,CAAYJ,IAAI,CAACK,SAAL,CAAeF,OAAf,CAAZ;ACdEhB,ADeH,oBCfUS,sBAAP,CAA8B,UAACG,IAAD,EAAU;AACtCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACD,GAFD,YDiBW;ACdZ,ADeDX,EAAAA,IAAI,EAAJA,IADa;AAEbK,EAAAA,mBAAmB,EAAnBA,mBAFa;AAGbG,EAAAA,ECdIY,oBDckB,EAAtBZ,sBAHa;ACVb,ADcAM,EAAAA,WAAW,EAAXA,cCVG;AAAA,ADMU,QCTFQ,CAGR,QAHDH,OAGC;AAAA,yBAFDI,IAEC;AAAA,QAFKC,CAEL,0BAFO,QAEP;AAAA,8BADDC,SACC;AAAA,QADUC,CACV,+BADa,IAAIC,IAAJ,EAAD,CAAaC,OAAb,EACZ;;AAAA;;AACD,SAAKT,OAAL,GAAeG,CAAf;AACA,SAAKC,IAAL,GAAYC,CAAZ;AACA,SAAKC,SAAL,GAAiBC,CAAjB;AACD;;;;gCACU;AACT,aAAO;AACLH,QAAAA,IAAI,EAAE,KAAKA,IADN;AAELJ,QAAAA,OAAO,EAAE,KAAKA,OAFT;AAGLM,QAAAA,SAAS,EAAE,KAAKA;AAHX,OAAP;AAKD;;;;;;eAGYP","file":"main.js","sourceRoot":"..\\src","sourcesContent":["let socket;\r\n\r\nfunction init(url){\r\n  socket = new WebSocket(url);\r\n  console.log('connecting...');\r\n}\r\n\r\nfunction registerOpenHandler(handlerFunction){\r\n  socket.onopen = () => {\r\n    console.log('open');\r\n    handlerFunction();\r\n  };\r\n}\r\n\r\nfunction registerMessageHandler(handlerFunction){\r\n  socket.onmessage = (e) => {\r\n    console.log('message', e.data);\r\n    let data = JSON.parse(e.data);\r\n    handlerFunction(data);\r\n  };\r\n}\r\n\r\nfunction sendMessage(payload){\r\n  socket.send(JSON.stringify(payload));\r\n}\r\n\r\nexport default {\r\n  init,\r\n  registerOpenHandler,\r\n  registerMessageHandler,\r\n  sendMessage\r\n}","import socket from './ws-client';\r\n\r\nclass ChatApp{\r\n  constructor(){\r\n    socket.init('ws://localhost:3001');\r\n    socket.registerOpenHandler(() => {\r\n      let message = new ChatMessage({ message: 'pow!' });\r\n      socket.sendMessage(message.serialize());\r\n    });\r\n    socket.registerMessageHandler((data) => {\r\n      console.log(data);\r\n    });\r\n  }\r\n}\r\n\r\nclass ChatMessage{\r\n  constructor({\r\n    message: m,\r\n    user: u='batman',  // Default value of user is batman\r\n    timestamp: t=(new Date()).getTime() // Default value of the timestamp is the current time\r\n  }) {\r\n    this.message = m;\r\n    this.user = u;\r\n    this.timestamp = t;\r\n  }\r\n  serialize(){\r\n    return {\r\n      user: this.user,\r\n      message: this.message,\r\n      timestamp: this.timestamp\r\n    };\r\n  }\r\n}\r\n\r\nexport default ChatApp;","import ChatApp from './app';\r\nnew ChatApp();"]}